name: Backend Tests and Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install backend dependencies
        run: npm ci

      - name: Run backend tests with coverage (ESM support)
        env:
          NODE_ENV: test
          JWT_SECRET_KEY: test-secret-key
          AUTH_RATE_LIMIT: 100
        run: node --experimental-vm-modules node_modules/.bin/jest --coverage

      - name: Upload coverage folder as artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: backend/coverage/

      - name: Upload backend coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          working-directory: backend
          files: ./coverage/lcov.info
          flags: backend
          name: backend-codecov
  deploy-backend:
    runs-on: ubuntu-latest
    needs: test-backend
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Trigger deployment webhook
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.DEPLOY_TOKEN }}" \
            -d '{
              "event": "deploy",
              "branch": "${{ github.ref_name }}",
              "commit": "${{ github.sha }}",
              "repository": "${{ github.repository }}",
              "actor": "${{ github.actor }}",
              "workflow_run_id": "${{ github.run_id }}"
            }' \
            ${{ secrets.DEPLOY_WEBHOOK_URL }}

      - name: Check deployment status
        run: |
          echo "Deployment webhook triggered successfully"
          echo "Commit: ${{ github.sha }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Run ID: ${{ github.run_id }}"
